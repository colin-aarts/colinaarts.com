// Generated by LiveScript 1.5.0
(function(){
  var keystone, fecha, modelCleanCyclic, types, Project;
  keystone = require('keystone');
  fecha = require('fecha');
  modelCleanCyclic = require('~/server/src/model-clean-cyclic');
  types = keystone.Field.Types;
  Project = new keystone.List('Project', {
    autokey: {
      path: 'slug',
      from: 'title',
      unique: true
    },
    map: {
      name: 'title'
    },
    defaultSort: '-publishedAt',
    drilldown: 'author',
    track: true
  });
  Project.add({
    title: {
      type: String,
      required: true,
      index: true
    },
    state: {
      type: types.Select,
      options: 'draft, published, archived',
      'default': 'draft',
      required: true,
      index: true
    },
    type: {
      type: types.Select,
      options: 'professional, hobby',
      'default': 'professional',
      required: true,
      index: true
    },
    author: {
      type: types.Relationship,
      ref: 'User',
      required: true,
      index: true,
      initial: true
    },
    publishedAt: {
      type: types.Date,
      yearRange: [2000, 2020],
      required: true,
      initial: true
    },
    timespan: {
      type: String,
      required: true,
      initial: true
    },
    logo: {
      type: types.CloudinaryImage,
      autoCleanup: true
    },
    image: {
      type: types.CloudinaryImage,
      autoCleanup: true,
      select: true
    },
    images: {
      type: types.CloudinaryImages,
      autoCleanup: true,
      select: true
    },
    repository: {
      type: types.Url,
      index: true
    },
    demo: {
      type: types.Url,
      index: true
    },
    tags: {
      type: types.Relationship,
      ref: 'Tag',
      many: true
    },
    links: {
      type: types.TextArray
    },
    ipNotice: {
      type: Boolean,
      'default': false
    },
    legalName: {
      type: String
    },
    content: {
      brief: {
        type: types.Html,
        required: true,
        index: true,
        initial: true
      },
      extended: {
        type: types.Html,
        required: true,
        initial: true
      }
    }
  });
  Project.defaultColumns = 'title, type, state, author, publishedAt';
  /*
  ** Virtuals
  */
  Project.schema.set('toJSON', {
    virtuals: true,
    transform: modelCleanCyclic.transformer
  });
  Project.schema.paths.images.schema.set('toJSON', {
    virtuals: true,
    transform: modelCleanCyclic.transformer
  });
  Project.schema.virtual('createdAtFmt').get(function(){
    return fecha.format(new Date(this.createdAt), 'YYYY');
  });
  Project.schema.virtual('updatedAtFmt').get(function(){
    return fecha.format(new Date(this.updatedAt), 'YYYY');
  });
  Project.schema.virtual('publishedAtFmt').get(function(){
    return fecha.format(new Date(this.publishedAt), 'YYYY');
  });
  Project.schema.virtual('links_').get(function(){
    return this.links.map(function(it){
      return JSON.parse(it);
    });
  });
  /*
  ** Image variants
  */
  (function(){
    var conf;
    conf = function(w){
      return {
        transformation: [
          {
            width: w,
            quality: 75,
            angle: 2,
            effect: 'blur:300'
          }, {
            effect: 'brightness_hsb:-30'
          }
        ]
      };
    };
    Project.schema.virtual('image.listing').get(function(){
      return this._.image.src(conf(400));
    });
    Project.schema.virtual('image.fullwidth').get(function(){
      return this._.image.src(conf(1920));
    });
    Project.schema.virtual('image.thumb').get(function(){
      return this._.image.src({
        width: 'auto:100:200',
        effect: 'blur:300',
        angle: 2,
        quality: 75
      });
    });
  }.call(this));
  Project.schema.virtual('logo.thumb').get(function(){
    return this._.logo.src({
      width: 'auto:100:200'
    });
  });
  Project.schema.paths.images.schema.virtual('gallery').get(function(){
    return this.src({
      overlay: {
        text: 'CONCEPT',
        font_family: 'Arial',
        font_size: 100
      },
      color: '#00000050'
    });
  });
  Project.register();
}).call(this);

//# sourceMappingURL=projects.js.map
